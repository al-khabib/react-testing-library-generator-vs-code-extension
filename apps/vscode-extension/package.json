{
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "rtlTestSuite",
          "title": "RTL Tests",
          "icon": "./media/icon-dark.svg"
        }
      ]
    },
    "views": {
      "rtlTestSuite": [
        {
          "id": "rtlTestAssistant.chat",
          "name": "Test Assistant",
          "icon": "./media/icon-dark.svg"
        }
      ]
    },
    "commands": [
      {
        "command": "rtlTestGenerator.generateInline",
        "title": "Preview RTL Tests",
        "category": "RTL"
      },
      {
        "command": "rtlTestGenerator.generateSelection",
        "title": "Preview RTL Tests for Selection",
        "category": "RTL"
      },
      {
        "command": "rtlTestGenerator.generateWorkspace",
        "title": "Generate RTL Tests for Workspace",
        "category": "RTL"
      },
      {
        "command": "rtlTestGenerator.openTestAssistant",
        "title": "Open RTL Test Assistant"
      },
      {
        "command": "rtlTestGenerator.reviewTest",
        "title": "Review RTL Test (LLM)",
        "category": "RTL"
      },
      {
        "command": "rtlTestGenerator.toggleDryRun",
        "title": "Toggle RTL Dry Run",
        "category": "RTL"
      }
    ],
    "menus": {
      "editor/title": [
        {
          "command": "rtlTestGenerator.generateInline",
          "when": "resourceLangId == typescriptreact",
          "group": "navigation@1"
        }
      ],
      "editor/context": [
        {
          "command": "rtlTestGenerator.generateSelection",
          "when": "editorLangId == typescriptreact && editorTextFocus && !editorHasSelection",
          "group": "rtlTestGenerator@1"
        },
        {
          "command": "rtlTestGenerator.generateSelection",
          "when": "editorLangId == typescriptreact && editorHasSelection",
          "group": "rtlTestGenerator@0"
        }
      ],
      "commandPalette": [
        {
          "command": "rtlTestGenerator.generateInline"
        },
        {
          "command": "rtlTestGenerator.generateSelection"
        },
        {
          "command": "rtlTestGenerator.generateWorkspace"
        },
        {
          "command": "rtlTestGenerator.openTestAssistant"
        },
        {
          "command": "rtlTestGenerator.reviewTest"
        },
        {
          "command": "rtlTestGenerator.toggleDryRun"
        }
      ]
    },
    "configuration": {
      "properties": {
        "rtlGen.model": {
          "type": "string",
          "default": "deep-seek-rtl-gen",
          "description": "Model identifier passed to the backend"
        },
        "rtlGen.ollamaUrl": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Local Ollama base URL"
        },
        "rtlGen.backendUrl": {
          "type": "string",
          "default": "http://localhost:7070",
          "description": "Backend API base URL"
        },
        "rtlGen.apiKey": {
          "type": "string",
          "default": "",
          "description": "Optional API key sent as x-api-key"
        },
        "rtlGen.defaultTestDir": {
          "type": "string",
          "default": "__tests__",
          "description": "Default relative directory for generated tests"
        },
        "rtlGen.stylePreset": {
          "type": "string",
          "enum": [
            "strict-a11y",
            "balanced",
            "legacy"
          ],
          "default": "strict-a11y",
          "description": "Guide the generator toward accessibility heavy, balanced, or legacy selectors"
        },
        "rtlGen.strictA11y": {
          "type": "boolean",
          "default": true,
          "description": "Force accessible queries when possible"
        },
        "rtlGen.useUserEvent": {
          "type": "boolean",
          "default": true,
          "description": "Prefer @testing-library/user-event over fireEvent"
        },
        "rtlGen.timeoutMs": {
          "type": "number",
          "default": 45000,
          "description": "Timeout in milliseconds for backend calls"
        },
        "rtlGen.logLevel": {
          "type": "string",
          "enum": [
            "error",
            "warn",
            "info",
            "debug"
          ],
          "default": "info",
          "description": "Verbosity of the extension output channel"
        },
        "rtlGen.batchMaxFiles": {
          "type": "number",
          "default": 20,
          "description": "Maximum files that batch generation will queue"
        },
        "rtlGen.enableTelemetry": {
          "type": "boolean",
          "default": false,
          "description": "Opt-in telemetry for anonymised feature usage"
        },
        "rtlGen.dryRun": {
          "type": "boolean",
          "default": false,
          "description": "Preview only, do not write files unless explicitly confirmed"
        }
      }
    }
  }
}
